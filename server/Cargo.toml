# Copyright (C) 2025 Bryan A. Jones.
#
# This file is part of the CodeChat Editor.
#
# The CodeChat Editor is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# The CodeChat Editor is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# the CodeChat Editor. If not, see
# [http://www.gnu.org/licenses/](http://www.gnu.org/licenses/).
#
# `Cargo.toml` -- Rust build/package management config for the server
# ===================================================================
#
# General package configurations
# ------------------------------
[package]
authors = ["Bryan A. Jones", "Peter Loux"]
categories = ["development-tools", "text-editors"]
description = "A programmer's word processor."
edition = "2024"
keywords = ["literate programming"]
license = "GPL-3.0-only"
name = "codechat-editor-server"
readme = "../README.md"
repository = "https://github.com/bjones1/CodeChat_Editor"
version = "0.1.24"

# This library allows other packages to use core CodeChat Editor features.
[lib]
name = "code_chat_editor"

# Features
# --------
#
# See the [docs](https://doc.rust-lang.org/cargo/reference/features.html).
[features]
# Uncomment this to show an explanation of the lexing process.
#default = ["lexer_explain"]
lexer_explain = []

# Dependencies
# ------------
[dependencies]
actix-files = "0.6"
actix-http = "3.9.0"
actix-rt = "2.9.0"
actix-web = "4"
actix-web-httpauth = "0.8.2"
actix-ws = "0.3.0"
bytes = { version = "1", features = ["serde"] }
chrono = "0.4"
clap = { version = "4.5.19", features = ["derive"] }
dunce = "1.0.5"
futures-util = "0.3.29"
imara-diff = { version = "0.2", features = [] }
indoc = "2.0.5"
lazy_static = "1"
log = "0.4"
log4rs = "1.3"
mime = "0.3.17"
mime_guess = "2.0.5"
minreq = "2.12.0"
normalize-line-endings = "0.3.0"
notify-debouncer-full = "0.5"
path-slash = "0.2.1"
pest = "2.7.14"
pest_derive = "2.7.14"
# Per the [docs](https://docs.rs/crate/pulldown-cmark/latest), skip building the
# binary.
pulldown-cmark = { version = "0.13", default-features = false, features = ["html"] }
regex = "1"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
thiserror = "2.0.12"
tokio = { version = "1", features = ["full"] }
tokio-postgres = { version = "0.7", features = ["with-chrono-0_4"] }
# Generate TypeScript imports with a suffix of `.js` per the
# [docs](https://docs.rs/ts-rs/latest/ts_rs/#cargo-features).
ts-rs = { version = "11.0.1", features = ["serde-compat", "import-esm"] }
url = "2.5.2"
urlencoding = "2"
webbrowser = "1.0.5"

# [Windows-only
# dependencies](https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#platform-specific-dependencies).
[target.'cfg(windows)'.dependencies]
win_partitions = "0.3.0"

# ### Development-only dependencies
[dev-dependencies]
actix-http = "3.9.0"
assert_cmd = "2.0.16"
assert_fs = "1"
assertables = "9"
predicates = "3.1.2"
pretty_assertions = "1.4.1"
tokio-tungstenite = "0.27"

# #### Use local packages for development
[patch.crates-io]
# Commented out for now; uncomment to resume use.
#actix = { path = "../../actix/actix" }
#actix-rt = { path = "../../actix-net/actix-rt" }

# Release
# -------
#
# Specify release-only features for pulldown. See the
# [docs](https://docs.rs/crate/pulldown-cmark/latest).
[profile.release]
lto = true
codegen-units = 1
panic = "abort"

# Distribution
# ------------
#
# This uses [cargo dist](https://opensource.axo.dev/cargo-dist) to build
# binaries across multiple platforms using github's CI/CD.
#
# The profile that `cargo dist` will build with.
[profile.dist]
inherits = "release"
lto = "thin"

[lints.rust]
# Avoid a lint about tarpaulin.
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tarpaulin_include)'] }
