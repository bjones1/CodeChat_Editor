<p>Project 2 Description Pre-writing<br>Parse HTML using HTML5Ever<br>By: Avery
    Fisher &amp; Colbert Lehr</p>
<ol>
    <li>Describes the feature you will add.
        <ol>
            <li>This feature uses the HTML5Ever crate to parse HTML in the
                CodeChat Editor in order to make the HTML human readable.&nbsp;
            </li>
        </ol>
    </li>
    <li>Defines which repository/repositories your code will be added to.
        <ol>
            <li>The code will be first added to the forked repository at: <a
                    class="anchor-1X4H4q anchorUnderlineOnHover-wiZFZ_"
                    tabindex="0"
                    title="https://github.com/cnl125/CNL_ACF_CodeChat_Editor"
                    role="button"
                    href="https://github.com/cnl125/CNL_ACF_CodeChat_Editor"
                    target="_blank"
                    rel="noreferrer noopener">https://github.com/cnl125/CNL_ACF_CodeChat_Editor</a>
                which will then attempted to be merged with the original
                repository at <a
                    class="anchor-1X4H4q anchorUnderlineOnHover-wiZFZ_"
                    tabindex="0"
                    title="https://github.com/bjones1/CodeChat_Editor"
                    role="button"
                    href="https://github.com/bjones1/CodeChat_Editor"
                    target="_blank"
                    rel="noreferrer noopener">https://github.com/bjones1/CodeChat_Editor</a>
            </li>
        </ol>
    </li>
    <li>Specifies what libraries, languages, and interfaces your code must work
        with.
        <ol>
            <li>The language that will be used is Rust as the primary file to
                be edited is webserver.rs in the server source file of the
                CodeChat editor. The HTML5Ever library will be used to parse
                the HTML.</li>
        </ol>
    </li>
    <li>Details a series of steps you will follow to complete this feature.
        <ol>
            <li>First, the Cargo.toml file in the server folder will need to be
                to list HTML5Ever as a dependency. Then the 'use' statements at
                the top of the webserver.rs file will be used to import the
                necessary html5ever types. The input html text will be parsed
                using 'parse_document' to generate the DOM tree.&nbsp;</li>
        </ol>
    </li>
    <li>Defines tests to show the feature works correctly.
        <ol>
            <li>An example of a possible test is to take an HTML file with a
                known parsed representation, parse it using the HTML5Ever
                library commands in the webserver.rs file, and ensure the
                resulting parsing matches the expected parsing.&nbsp;</li>
        </ol>
    </li>
    <li>Outlines goals for the draft pull request and final pull request.
        <ol>
            <li>The first draft pull request we expect to have the logic of the
                code down but may experience some issues with integrating it
                into the webserver.rs file since we are not use to working
                outside of an IDE. Once peer-reviewed and updates made, we
                expect to have a working HTML parser for the final pull request
                that passes the aforementioned test</li>
        </ol>
    </li>
</ol>
